{"version":3,"sources":["../../../src/models/sources/keyboard-scroll-source.ts"],"names":[],"mappings":";;AACA,8CAA6C;AAM7C;IAIE,8BAAoB,aAA4B,EAC5B,IAAY;QADZ,kBAAa,GAAb,aAAa,CAAe;QAC5B,SAAI,GAAJ,IAAI,CAAQ;QAHhC,kBAAa,GAAmB,EAAE,CAAC;IAGC,CAAC;IAErC,mCAAI,GAAJ;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAC1B,uBAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC;iBACpC,SAAS,CAAC,UAAC,CAAgB,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACzD,CAAC;IAED,kDAAmB,GAAnB,UAAoB,CAAgB;QAClC,IAAM,eAAe,GAAG;YACtB,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE;YACnC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;YACpB,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;YACpB,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;YACnB,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;SACpB,CAAC;QAEF,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,IAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QACxE,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,wCAAS,GAAT,UAAU,QAAgB,IAAI,CAAC;IACjC,2BAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDY,oDAAoB","file":"keyboard-scroll-source.js","sourceRoot":"","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ScrollHandler } from '../handlers/scroll-handler';\nimport { ScrollSource } from './scroll-source.interface';\n\nexport class KeyboardScrollSource implements ScrollSource {\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private scrollHandler: ScrollHandler,\n              private zone: NgZone) { }\n\n  bind() {\n    this.zone.runOutsideAngular(() => {\n      Observable.fromEvent(document, 'keyup')\n        .subscribe((e: KeyboardEvent) => this.handleKeyboardEvent(e));\n    });\n  }\n\n  unbind() {\n    this.subscriptions.forEach(item => item.unsubscribe());\n  }\n\n  handleKeyboardEvent(e: KeyboardEvent) {\n    const KEY_CODE_DELTAS = {\n      32: { x: 0, y: window.innerHeight },\n      37: { x: -20, y: 0 },\n      38: { x: 0, y: -20 },\n      39: { x: 20, y: 0 },\n      40: { x: 0, y: 20 }\n    };\n\n    if (!KEY_CODE_DELTAS[e.keyCode]) {\n      return;\n    }\n\n    if (!this.scrollHandler.handleAllowed) {\n      e.preventDefault();\n      return false;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.scrollHandler.animatingScroll) {\n      return false;\n    }\n\n    const delta = KEY_CODE_DELTAS[e.keyCode];\n    this.scrollHandler.handleScrollEvent(delta.x, delta.y, 0.16, undefined);\n    return false;\n  }\n\n  onStickTo(position: number) { }\n}\n"]}