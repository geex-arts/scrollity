{"version":3,"sources":["../../../src/models/handlers/items-scroll-handler.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,8CAA6C;AAE7C,mDAAuE;AAEvE;IAAwC,sCAAa;IAMnD,4BAAY,QAAgB,EAChB,UAAkB,EAClB,OAA6B;QAFzC,YAGE,kBAAM,OAAO,CAAC,SAGf;QARD,4BAAsB,GAAG,KAAK,CAAC;QAM7B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;IAC/B,CAAC;IAED,+CAAkB,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,8CAAiB,GAAjB,UAAkB,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAgB;QAA5D,iBAmBC;QAnB2C,qBAAA,EAAA,gBAAgB;QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC;QACT,CAAC;QAED,IAAI,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC;QAC5B,IAAI,QAAQ,CAAC;QAEb,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;YAClE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3D,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC/B,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC/C,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,sBAAsB,GAAG,KAAK,EAAnC,CAAmC,EAAE,GAAG,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,qCAAQ,GAAR,UAAS,QAAQ,EAAE,QAAQ,EAAE,IAAgB,EAAE,WAAmB;QAAlE,iBAcC;QAd4B,qBAAA,EAAA,gBAAgB;QAAE,4BAAA,EAAA,mBAAmB;QAChE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC;QAED,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE5C,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC;QAED,IAAM,GAAG,GAAG,uBAAU,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChD,GAAG,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,GAAG,KAAK,EAA5B,CAA4B,CAAC,CAAC;QAClD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACH,yBAAC;AAAD,CAtDA,AAsDC,CAtDuC,8BAAa,GAsDpD;AAtDY,gDAAkB","file":"items-scroll-handler.js","sourceRoot":"","sourcesContent":["import { Observable } from 'rxjs/Observable';\n\nimport { ScrollHandler, ScrollHandlerOptions } from './scroll-handler';\n\nexport class ItemsScrollHandler extends ScrollHandler {\n\n  itemSize: number;\n  itemsCount: number;\n  handleScrollProcessing = false;\n\n  constructor(itemSize: number,\n              itemsCount: number,\n              options: ScrollHandlerOptions) {\n    super(options);\n    this.itemSize = itemSize;\n    this.itemsCount = itemsCount;\n  }\n\n  getInstantPosition(): number {\n    return this.position;\n  }\n\n  handleScrollEvent(deltaX, deltaY, duration, ease = undefined) {\n    if (this.handleScrollProcessing) {\n      return;\n    }\n\n    let delta = deltaX + deltaY;\n    let position;\n\n    if (delta >= this.itemSize && this.position < this.itemsCount - 1) {\n      position = this.position + 1;\n    } else if (delta <= 0 - this.itemSize && this.position > 0) {\n      position = this.position - 1;\n    }\n\n    if (position != undefined) {\n      this.handleScrollProcessing = true;\n      this.scrollTo(position, duration, ease, false);\n      setTimeout(() => this.handleScrollProcessing = false, 600);\n    }\n  }\n\n  scrollTo(position, duration, ease = undefined, cancellable = false): Observable<{}> {\n    if (!cancellable) {\n      this.animatingScroll = true;\n    }\n\n    this.previousScrollPosition = this.position;\n\n    if (position != this._position.value) {\n      this._position.next(position);\n    }\n\n    const obs = Observable.of([{}]).delay(duration);\n    obs.subscribe(() => this.animatingScroll = false);\n    return obs;\n  }\n}\n"]}