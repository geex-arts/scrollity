{"version":3,"sources":["../../../src/models/handlers/scroll-handler.ts"],"names":[],"mappings":"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","file":"scroll-handler.js","sourceRoot":"","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { TimelineMax } from 'gsap';\n\nimport { ScrollService } from '../../services/scroll.service';\nimport { ScrollTriggerDirective } from '../../directives/scroll-trigger/scroll-trigger.directive';\nimport { ScrollSource } from '../sources/scroll-source.interface';\nimport { TouchScrollSource } from '../sources/touch-scroll-source';\nimport { WheelScrollSource } from '../sources/wheel-scroll-source';\nimport { Subject } from 'rxjs/Subject';\n\nexport type ScrollHandlerOptions = {\n  element: HTMLElement;\n  horizontal?: boolean,\n  translate?: boolean,\n  initialPosition?: number,\n  viewport?: any,\n  overrideScroll?: boolean\n};\n\nexport abstract class ScrollHandler {\n\n  abstract getInstantPosition(): number;\n  abstract handleScrollEvent(deltaX, deltaY, duration);\n  abstract scrollTo(position, duration, ease, cancellable);\n\n  service: ScrollService;\n  zone: NgZone;\n  element: HTMLElement;\n  enabled = true;\n  horizontal: boolean;\n  translate: boolean;\n  initialPosition: number;\n  viewport: any;\n  overrideScroll: boolean;\n  timeline = new TimelineMax();\n  scrollListener: any;\n  resizeListener: any;\n  animatingScroll = false;\n  instantPosition = 0;\n  _position = new BehaviorSubject<number>(0);\n  _scrollMapPosition = new BehaviorSubject<{ x: number, y: number }>(undefined);\n  _viewportSize;\n  _contentSize;\n  triggers: { trigger: ScrollTriggerDirective, activated: boolean }[] = [];\n  previousScrollPosition = 0;\n  previousStickTo: ScrollTriggerDirective;\n  scrollSourceHandlers: ScrollSource[] = [];\n  updateContentSizeInterval;\n  _scrollOverflow = new Subject<number>();\n\n  constructor(options: ScrollHandlerOptions) {\n    this.element = options.element;\n    this.horizontal = options.horizontal || false;\n    this.translate = options.translate || false;\n    this.initialPosition = options.initialPosition || 0;\n    this.viewport = options.viewport || this.element;\n    this.overrideScroll = options.overrideScroll || true;\n  }\n\n  onInit() {\n    if (this.initialPosition) {\n      this.scrollTo(this.initialPosition, 0, undefined, false);\n    }\n\n    if (this.overrideScroll) {\n      this.scrollSourceHandlers.push(\n          new TouchScrollSource(this, this.zone),\n          new WheelScrollSource(this, this.zone)\n      );\n    }\n\n    this.setInitialPosition();\n    this.updateViewportSize();\n    this.updateContentSize();\n\n    this.zone.runOutsideAngular(() => {\n      if (this.updateContentSizeInterval) {\n        clearInterval(this.updateContentSizeInterval);\n      }\n      this.updateContentSizeInterval = setInterval(() => this.updateContentSize(), 500);\n    });\n  }\n\n  setInitialPosition() {\n    let value;\n\n    if (this._position == undefined && this.initialPosition) {\n      value = this.initialPosition;\n    } else {\n      value = this.getInstantPosition();\n    }\n\n    this.instantPosition = value;\n    this._position.next(value);\n  }\n\n  addTrigger(trigger) {\n    this.triggers.push({ trigger: trigger, activated: false });\n  }\n\n  removeTrigger(trigger) {\n    this.triggers = this.triggers.filter(item => item !== trigger.trigger);\n  }\n\n  enable() {\n    this.enabled = true;\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  get handleAllowed() {\n    return this.service.handleAllowed(this) && this.enabled;\n  }\n\n  bind() {\n    this.zone.runOutsideAngular(() => {\n      this.scrollListener = () => {\n        return this.handleScrollEndEvent();\n      };\n\n      this.resizeListener = () => {\n        return this.handleResizeEvent();\n      };\n\n      this.viewport.addEventListener('scroll', this.scrollListener);\n      window.addEventListener('resize', this.resizeListener);\n    });\n\n    this.scrollSourceHandlers.forEach(item => item.bind());\n  }\n\n  unbind() {\n    if (this.scrollListener) {\n      this.viewport.removeEventListener('scroll', this.scrollListener);\n    }\n\n    if (this.resizeListener) {\n      window.removeEventListener('resize', this.resizeListener);\n    }\n\n    this.scrollSourceHandlers.forEach(item => item.unbind());\n  }\n\n  handleScrollEndEvent() {\n    this.onScroll();\n  }\n\n  handleResizeEvent() {\n    this.updateViewportSize();\n    this.updateContentSize();\n    this.updateTriggerPositions();\n  }\n\n  get viewportSize() {\n    if (!this._viewportSize) {\n      this.updateViewportSize();\n    }\n    return this._viewportSize;\n  }\n\n  updateViewportSize() {\n    this._viewportSize = this.translate ? {\n      width: this.viewport.parentNode['clientWidth'],\n      height: this.viewport.parentNode['clientHeight']\n    } : {\n      width: this.viewport.clientWidth || this.viewport.innerWidth,\n      height: this.viewport.clientHeight || this.viewport.innerHeight\n    };\n  }\n\n  get contentSize() {\n    if (!this._contentSize) {\n      this.updateContentSize();\n    }\n    return this._contentSize;\n  }\n\n  updateContentSize() {\n    this._contentSize = this.translate ? {\n      width: this.element.offsetWidth,\n      height: this.element.offsetHeight\n    } : {\n      width: this.element.scrollWidth,\n      height: this.element.scrollHeight\n    };\n  }\n\n  updateTriggerPositions() {\n    const changes = this.triggers.map(trigger => trigger.trigger.updatePosition());\n\n    if (changes.filter(item => item).length) {\n      this.onScroll();\n    }\n  }\n\n  get position$(): Observable<number> {\n    return this._position.asObservable();\n  }\n\n  get position() {\n    return this._position.value;\n  }\n\n  get scrollOverflow$(): Observable<number> {\n    return this._scrollOverflow.asObservable();\n  }\n\n  normalizePosition(position) {\n    if (position < 0) {\n      position = 0;\n    } else if (this.horizontal && position > this.contentSize.width - this.viewportSize.width) {\n      position = this.contentSize.width - this.viewportSize.width;\n    } else if (!this.horizontal && position > this.contentSize.height - this.viewportSize.height) {\n      position = this.contentSize.height - this.viewportSize.height;\n    }\n\n    return position;\n  }\n\n  preventScroll(delta): boolean {\n    const direction = delta != 0 ? delta / Math.abs(delta) : 0;\n    let stickTo: ScrollTriggerDirective;\n\n    for (let trigger of this.triggers) {\n      let triggerPosition = this.getTriggerPosition(trigger.trigger);\n      const triggerDelta = triggerPosition - this.position;\n      const triggerDirection = triggerDelta != 0 ? triggerDelta / Math.abs(triggerDelta) : 0;\n\n      if (trigger.trigger.stick != undefined\n          && triggerDirection == direction\n          && this.previousStickTo != trigger.trigger\n          && Math.abs(triggerPosition - this.position) <= this.viewportSize.width + trigger.trigger.stick\n          && (!stickTo || Math.abs(stickTo.position - this.position) > Math.abs(triggerDelta))) {\n        stickTo = trigger.trigger;\n      }\n    }\n\n    if (stickTo) {\n      this.previousStickTo = stickTo;\n      this.scrollSourceHandlers.forEach(item => item.onStickTo(stickTo.position));\n      this.scrollTo(stickTo.position, 0.9, undefined, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  getTriggerPosition(trigger: ScrollTriggerDirective): number {\n    return trigger.position;\n  }\n\n  onScroll() {\n    let triggered = false;\n\n    this.instantPosition = this.getInstantPosition();\n\n    for (let trigger of this.triggers) {\n      let triggerPosition = this.getTriggerPosition(trigger.trigger);\n\n      if (this.position >= triggerPosition && !trigger.activated) {\n        trigger.activated = true;\n        trigger.trigger.onActivated({\n          triggerPosition: triggerPosition,\n          previousScrollPosition: this.previousScrollPosition,\n          scrollPosition: this.position\n        });\n        triggered = true;\n      } else if (this.position < triggerPosition && trigger.activated) {\n        trigger.activated = false;\n        trigger.trigger.onDeactivated({\n          triggerPosition: triggerPosition,\n          previousScrollPosition: this.previousScrollPosition,\n          scrollPosition: this.position\n        });\n        triggered = true;\n      }\n    }\n\n    if (triggered) {\n      this.updateContentSize();\n    }\n  }\n}\n"]}